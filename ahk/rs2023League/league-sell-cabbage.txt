;league buy craft emerald





global lookforcolor:= 0xff6901


CoordMode, Mouse, Window

global minMouseSpeed := 3
global maxMouseSpeed := 4

global minRandShortSleep := 100
global maxRandShortSleep := 300

global minRandLongSleep := 500
global maxRandLongSleep := 1000


global loopTimer := 50
global loopAmt := 2000


global LeftSearchArea := 0
global TopSearchArea := 0


global RightSearchArea := A_ScreenWidth
global BottomSearchArea := A_ScreenHeight

SetDefaultMouseSpeed, 2

global imgInvOff        := % A_ScriptDir . "\rslib\img\invOff.png"
global imgChisel        := % A_ScriptDir . "\rslib\img\chisel.png"
global imgAmethyst      := % A_ScriptDir . "\rslib\img\amethyst.png"
global imgUncutSapphire := % A_ScriptDir . "\rslib\img\uncutSapphire.png"
global imgUncutEmerald  := % A_ScriptDir . "\rslib\img\uncutEmerald.png"
global imgCutEmerald    := % A_ScriptDir . "\rslib\img\cutEmerald.png"
global imgInvEmerald    := % A_ScriptDir . "\rslib\img\invEmerald.png.png"
global imgUncutRuby     := % A_ScriptDir . "\rslib\img\uncutRuby.png"
global imgBankersNote   := % A_ScriptDir . "\rslib\img\bankersNote.png"
global imgCoinPouch     := % A_ScriptDir . "\rslib\img\coinPouch.png"



ActivateWin(){
    SetTitleMatchMode, 2
    CoordMode, Mouse, Window
    tt = RuneLite ahk_class SunAwtFrame
    WinWait, %tt%
    IfWinNotActive, %tt%,, WinActivate, %tt%
}
mouseSpeed()
{
    SetDefaultMouseSpeed, rand(minMouseSpeed,maxMouseSpeed)
}

OpenInv()
{
    
    ImageSearch, x, y, LeftSearchArea, TopSearchArea, RightSearchArea, BottomSearchArea, *3 %imgInvOff%
    if ErrorLevel
    {
        return false
    }
    else
    {
        MouseClick, L,  % x + rand(5,10), % y + rand(5,10)
        return true
    }
}

rand(min, max)

{
	random, ran, %min%, %max%
	return ran
}
 
randLongSleep()
{
	Sleep, % rand(minRandLongSleep,maxRandLongSleep)
}
 
randShortSleep()
{
	Sleep, % rand(minRandShortSleep,maxRandShortSleep)
}


; alt and p to test clicking on Pixel
!p::ClickOnPixel(lookforcolor)
ClickOnPixel(color)
{
    randShortSleep()
    PixelSearch, x, y, LeftSearchArea, TopSearchArea, RightSearchArea, BottomSearchArea, color, 2, fast RGB
    if ErrorLevel
    {
        return false
    }
    else
    {
        MouseClick, L, x + rand(0,3),  y + rand(10,20)
        return true
    }
}

;==========================================


; Start the loop
!s::StartLoop()
StartLoop(){
	MsgBox, "start run"
	Loop, % loopAmt
	{
		ActivateWin()
		ClickOnPixel(lookforcolor)
		Sleep, 500
		
		randShortSleep()
		Send, {Blind}{Space}
		randShortSleep()
		Sleep, 200
		
		Send, {Blind}{Space}
		Sleep, 450
		randShortSleep()
		
		Send, {Blind}{Space}
		randShortSleep()		
		
		Send, {Blind}{Space}
		Sleep, 650
		randShortSleep()
		
		Send, {Blind}{1}
		Sleep, 650
		randShortSleep()
		
		Send, {Blind} {Space}
		Sleep, 650
		randShortSleep()
		
		BankInv()
	}	
}





; alt and c to drop logs from inv

BankInv()
{
	OpenInv()
	BankNote()
}

!l::BankNote()
BankNote(){
	ImageSearch, x, y, LeftSearchArea, TopSearchArea, RightSearchArea, BottomSearchArea, *3 %imgBankersNote%
    if ErrorLevel
    {
        return false
    }
    else
    {
        MouseClick, L,  x + rand(5,10),y + rand(5,10),, % mouseSpeed()
        return true
    }
}
